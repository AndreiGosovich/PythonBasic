
__author__ = "Госович Андрей Михайлович"

# 3.	Создать собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере.
# Запрашивать у пользователя данные и заполнять список необходимо только числами.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована.
# Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду «stop».
# При этом скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
# Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента.
# Вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.


class NumbersOnlyException(Exception):
    def __init__(self, txt):
        self.txt = txt


result_list = []
next_value = ""

while next_value != "stop":
    next_value = input('Введите число (или "stop" для завершения ввода): ')
    try:
        if next_value.isdigit():
            result_list.append(int(next_value))
        else:
            raise NumbersOnlyException("Введено не число!")
    except NumbersOnlyException as err:
        print(err)
    else:
        print(f"{next_value} добавлено в список")

print(result_list)
